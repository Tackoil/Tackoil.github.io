import{_ as s,p as n,q as a,U as e}from"./framework-806b4cee.js";const c={},t=e(`<p>实习期间遇到了一些页面上的需求，虽然这些需求可能也没有那么重要，但还是希望越接近设计稿越好。毕竟设计稿的效果看着真不错，还是由衷希望这些效果也能在页面上呈现出来。计划在这里整理一些不太好实现的样式，以做记录，<s>也希望以后回来看看的时候能吐槽下这实现的是什么鬼东西</s>。</p><h1 id="布局" tabindex="-1"><a class="header-anchor" href="#布局" aria-hidden="true">#</a> 布局</h1><h2 id="非边缘的滚动条" tabindex="-1"><a class="header-anchor" href="#非边缘的滚动条" aria-hidden="true">#</a> 非边缘的滚动条</h2><p>这里是指滚动条没有位于卡片的最边缘，而是左右两侧都有一定的空白。如果两侧的空白完全相等的话，确实看起来效果会更好。不过通常来讲，应该不会有人在意滚动条的位置。</p><p>实现也很简单（或者说过于简单）。只需要在右侧同时加上<code>margin</code>和<code>padding</code>就可以了。可以发现，在盒模型中，scrollbar是出现在border里面的。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.scroller-demo__container</span> <span class="token punctuation">{</span>
    <span class="token property">margin-right</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
    <span class="token property">padding-right</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div id="scroller-demo" class="scroller-demo"><div class="scroller-demo__container"><div class="scroller-demo__content"> rolling girl 🎵 </div></div></div><h1 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h1><h2 id="毛玻璃" tabindex="-1"><a class="header-anchor" href="#毛玻璃" aria-hidden="true">#</a> 毛玻璃</h2><p>虽说这个博客主题中header部分就有毛玻璃效果，但一直没有关注过这个的实现方式（甚至以为需要用JS），但实际上CSS就可以实现。</p><p>https://developer.mozilla.org/zh-CN/docs/Web/CSS/backdrop-filter</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.filter-demo</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">backdrop-filter</span><span class="token punctuation">:</span> <span class="token function">blur</span><span class="token punctuation">(</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要特殊注意的是，这个元素一定要有一点透明，否则这个元素就会完全挡住背景，也就完全看不到被高斯模糊的背景了。效果还是不错的，但如果有动画的话，可能会遇到一个小问题。</p><div id="filter-demo" class="filter-demo"><div class="filter-demo__background"><div class="filter-demo__container"><div class="filter-demo__glasscard"></div></div></div></div><p>可以发现当黑色方块的透明度恢复到100%时，模糊效果才出现。这是由于<code>opacity</code> 和<code>backdrop-filter</code> 不在同一个元素上导致的，所以使用时需要多留意。</p>`,15),o=[t];function i(p,l){return n(),a("div",null,o)}const r=s(c,[["render",i],["__file","css-hacky.html.vue"]]);export{r as default};
